<?xml version="1.0" encoding="UTF-8"?>
<Parameters>
    <!-- # this is a sample parameter file -->
    <Test_EnergyMomentumTensor_Fermion_1pt_Function>
        <!--   ## gauge_config_status = {Continue,Cold_start,Hot_start} -->
        <!--   #  gauge_config_status      : Continue -->
        <gauge_config_status>Branch</gauge_config_status>
        <!--   #  gauge_config_status      : Read_gauge_heavy -->
        <!--   #  gauge_config_status      : Read_gauge_phys -->
        <!--   ## gauge_config_type = {Text,Binary,Binary_Parallel,Fortran_JLQCD,Fortran_ILDG,ILDG,ILDG_Parallel,None} -->
        <gauge_config_type_input>Text</gauge_config_type_input>
        <config_filename_input>./conf_04040408.txt</config_filename_input>
        <gauge_config_type_output>None</gauge_config_type_output>
        <config_filename_output>./conf_output.dat</config_filename_output>
        <!--   ## random_number_type = {Mseries,MT19937,SFMT} NB. SFMT is an extra library -->
        <random_number_type>MT19937</random_number_type>
        <seed_for_random_number>1234567UL</seed_for_random_number>
        <rand_filename_input>./rand.txt</rand_filename_input>
        <rand_filename_output>./rand.txt</rand_filename_output>
        <even_odd>1</even_odd>
        <number_of_valence_quarks>2</number_of_valence_quarks>
        <!--   ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
        <verbose_level>General</verbose_level>
        <expected_result>9.89310925856716e+00</expected_result>
    </Test_EnergyMomentumTensor_Fermion_1pt_Function>
    <FermionFlow_1pt_Function>
        <!--   ## filename_output = {stdout, or "filename"} -->
        <filename_output>stdout</filename_output>
        <number_of_noises>20</number_of_noises>
        <!--   ## Min t = step_size * measurement_interval * initial_tau -->
        <initial_tau>1</initial_tau>
        <!--   ## Max t = step_size * measurement_interval * number_of_measurement_times -->
        <number_of_measurement_times>2</number_of_measurement_times>
        <!--   ## Measure fermion flow for each t = step_size * measurement_interval -->
        <measurement_interval>5</measurement_interval>
        <!--   ## Store gauge conf for each t = step_size * measurement_interval * gauge_store_interval -->
        <gauge_store_interval>1</gauge_store_interval>
        <max_momentum>1</max_momentum>
        <!--   ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
        <verbose_level>General</verbose_level>
    </FermionFlow_1pt_Function>
    <Action_G>
        <action_type>Action_G_Rectangle</action_type>
        <!--   ## NB. beta has been fixed in GradientFlow -->
        <!--   # beta        : 3.0 -->
        <c_plaq>1.0</c_plaq>
        <c_rect>0.0</c_rect>
        <!--   ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
        <verbose_level>General</verbose_level>
    </Action_G>
    <Quark_1>
        <temporary_filename_base>prop_1</temporary_filename_base>
        <Fopr>
            <!--     ## fermion_type = {Clover,CloverGeneral,Clover_Isochemical,Clover_SF,TMWilson, -->
            <!--     ##                 Wilson,WilsonGeneral,Wilson_Isochemical,Wilson_SF} -->
            <!--     ## NB. Domainwall,Overlap,Staggered need special treatments -->
            <fermion_type>Clover</fermion_type>
            <!--     ## gamma_matrix_type = {Chiral,Dirac} -->
            <gamma_matrix_type>Dirac</gamma_matrix_type>
            <hopping_parameter>0.12</hopping_parameter>
            <clover_coefficient>1.0</clover_coefficient>
            <!--     # hopping_parameter          : 0.13779625 -->
            <!--     # clover_coefficient         : 1.715 -->
            <!--     # hopping_parameter          : 0.1356 -->
            <!--     # clover_coefficient         : 1.628 -->
            <boundary_condition type="sequence">
                <x>1</x>
                <y>1</y>
                <z>1</z>
                <t>-1</t>
            </boundary_condition>
            <!--     ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
            <verbose_level>General</verbose_level>
        </Fopr>
        <Solver>
            <!--     ## solver_type = {CG,BiCGStab_Cmplx,BiCGStab_L_Cmplx,BiCGStab_DS_L_Cmplx,BiCGStab_IDS_L_Cmplx,GMRES_m_Cmplx} -->
            <solver_type>BiCGStab_L_Cmplx</solver_type>
            <maximum_number_of_iteration>5000</maximum_number_of_iteration>
            <maximum_number_of_restart>100</maximum_number_of_restart>
            <convergence_criterion_squared>1.0e-28</convergence_criterion_squared>
            <!--     ## additional parameters for BiCGStab series -->
            <Omega_tolerance>0.60</Omega_tolerance>
            <!--     ## additional parameters for each solver -->
            <number_of_orthonormal_vectors>2</number_of_orthonormal_vectors>
            <tolerance_for_DynamicSelection_of_L>0.1</tolerance_for_DynamicSelection_of_L>
            <use_initial_guess>0</use_initial_guess>
            <!--     ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
            <verbose_level>General</verbose_level>
        </Solver>
    </Quark_1>
    <Quark_2>
        <temporary_filename_base>prop_2</temporary_filename_base>
        <Fopr>
            <!--     ## fermion_type = {Clover,CloverGeneral,Clover_Isochemical,Clover_SF,TMWilson, -->
            <!--     ##                 Wilson,WilsonGeneral,Wilson_Isochemical,Wilson_SF} -->
            <!--     ## NB. Domainwall,Overlap,Staggered need special treatments -->
            <fermion_type>Clover</fermion_type>
            <!--     ## gamma_matrix_type = {Chiral,Dirac} -->
            <gamma_matrix_type>Dirac</gamma_matrix_type>
            <hopping_parameter>0.115</hopping_parameter>
            <clover_coefficient>1.0</clover_coefficient>
            <!--     # hopping_parameter          : 0.13663375 -->
            <!--     # clover_coefficient         : 1.715 -->
            <!--     # hopping_parameter          : 0.1351 -->
            <!--     # clover_coefficient         : 1.628 -->
            <boundary_condition type="sequence">
                <x>1</x>
                <y>1</y>
                <z>1</z>
                <t>-1</t>
            </boundary_condition>
            <!--     ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
            <verbose_level>General</verbose_level>
        </Fopr>
        <Solver>
            <!--     ## solver_type = {CG,BiCGStab_Cmplx,BiCGStab_L_Cmplx,BiCGStab_DS_L_Cmplx,BiCGStab_IDS_L_Cmplx,GMRES_m_Cmplx} -->
            <solver_type>BiCGStab_L_Cmplx</solver_type>
            <maximum_number_of_iteration>5000</maximum_number_of_iteration>
            <maximum_number_of_restart>100</maximum_number_of_restart>
            <convergence_criterion_squared>1.0e-28</convergence_criterion_squared>
            <!--     ## additional parameters for BiCGStab series -->
            <Omega_tolerance>0.60</Omega_tolerance>
            <!--     ## additional parameters for each solver -->
            <number_of_orthonormal_vectors>2</number_of_orthonormal_vectors>
            <tolerance_for_DynamicSelection_of_L>0.1</tolerance_for_DynamicSelection_of_L>
            <use_initial_guess>0</use_initial_guess>
            <!--     ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
            <verbose_level>General</verbose_level>
        </Solver>
    </Quark_2>
    <GradientFlow>
        <!--   ## order_of_RungeKutta = {1,2,3,4} -->
        <order_of_RungeKutta>3</order_of_RungeKutta>
        <step_size>0.02</step_size>
        <order_of_approx_for_exp_iP>8</order_of_approx_for_exp_iP>
        <!--   ## adaptive = { 0 = false, 1 = true } -->
        <adaptive>0</adaptive>
        <tolerance>1.0e-4</tolerance>
        <safety_factor>0.9</safety_factor>
        <!--   ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
        <verbose_level>General</verbose_level>
    </GradientFlow>
    <FermionFlow>
        <!--   ## order_of_RungeKutta = {3} -->
        <order_of_RungeKutta>3</order_of_RungeKutta>
        <step_size>0.02</step_size>
        <order_of_approx_for_exp_iP>8</order_of_approx_for_exp_iP>
        <boundary_condition type="sequence">
            <x>1</x>
            <y>1</y>
            <z>1</z>
            <t>-1</t>
        </boundary_condition>
        <!--   ## verbose_level = {Crucial,General,Detailed,Paranoiac} -->
        <verbose_level>General</verbose_level>
    </FermionFlow>
    <SourceRandom>
        <!--   ## noise_type = {Gaussian,U1,Z2} -->
        <noise_type>Z2</noise_type>
        <source_position type="sequence">
            <x>0</x>
            <y>0</y>
            <z>0</z>
            <t>0</t>
        </source_position>
        <source_momentum type="sequence">
            <x>0</x>
            <y>0</y>
            <z>0</z>
            <t>0</t>
        </source_momentum>
    </SourceRandom>
</Parameters>
